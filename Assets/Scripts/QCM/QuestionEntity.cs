using System.Collections;
using System.Collections.Generic;
using System.Reflection.Emit;
using UnityEngine;

[System.Serializable]
public class QuestionEntity
{
    #region Public Variables
    public int id;
	[TextArea]
    public string question;
    [TextArea]
	public string[] answers;
    public int correctAnswer;
    public int playerSelection;
    #endregion

    #region Constructor
    public QuestionEntity(int id, string question, string[] answers, int correctAnswer)
    {
        this.id = id;
        this.question = question;
        this.answers = answers;
        this.correctAnswer = correctAnswer;
        this.playerSelection = -1;

        if(correctAnswer > answers.Length)
            Debug.LogError("Error: Problem with question entity");
    }
    #endregion

    #region Helping Functions

    /// <summary>
    /// Since Unity inspector does not allow developer to add new line in the string
    /// This function will allow developers to add new line to the string
    /// TO Add New Line in the String, Just add ( NEWLINE ) into the string when you want to add new line
    /// Example. "Hello NEWLINE world". 
    ///          Output: Hello
    ///                  world
    /// </summary>
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for ManageAnswers
    public void ManageAnswers()
    {
        for (int i = 0; i < answers.Length; i++)
        {
            string answer = answers[i];
            if (answer.Contains(" NEWLINE "))
            {
                answers[i] = answer.Replace(" NEWLINE ", "\n");
            }
        }
    }

    /// <summary>
    /// This will return check if the answer is correct, and will return the bool value accrdingly
    /// </summary>
    /// <returns>
    ///   <c>true</c> if this instance is correct; otherwise, <c>false</c>.
    /// </returns>
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for IsCorrect
    public bool IsCorrect()
    {
        if (playerSelection == correctAnswer)
            return true;
        return false;
    }
    #endregion

}
